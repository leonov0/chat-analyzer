name: Test and Deploy on Heroku

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        working-directory: ./backend
        run: dotnet restore ChatAnalyzer.sln

      - name: Build the project
        working-directory: ./backend
        run: dotnet build ChatAnalyzer.sln --configuration Release --no-restore

      - name: Run xUnit tests
        working-directory: ./backend
        run: dotnet test ChatAnalyzer.UnitTests --configuration Release --no-build --logger trx --results-directory TestResults

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Heroku Container Registry
        run: |
          echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Build Docker image
        run: docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web ./backend

      - name: Push to Heroku
        run: docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Release app on Heroku
        run: |
          curl -n -X PATCH https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/formation \
            -d '{"updates":[{"type":"web","docker_image":"'"$(docker inspect registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web --format={{.Id}})"'"}]}' \
            -H "Content-Type: application/json" \
            -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
            -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY }}"

        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
